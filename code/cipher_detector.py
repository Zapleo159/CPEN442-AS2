import vigenere, playfair_cracker, substitution

def which_cipher(ciphertext):
    # check if there are no bigrams with repeated letters
    flag = True
    for i in range(0, len(ciphertext), 2):
        if(ciphertext[i] == ciphertext[i + 1]):
            flag = False
            break
    if(flag):
        print("Playfair")
        return 0

    # calculate IC
    letter_count = {char: ciphertext.count(char) for char in ciphertext}
    ic = sum(n * (n - 1) for n in letter_count.values()) / (len(ciphertext) * (len(ciphertext) - 1))
    
    # check if ic is close to english
    if ic > 0.06:
        print("Substitution")
        substitution.crack(ciphertext)
    else:
        print("Vigenere")
        vigenere.crack(ciphertext)


which_cipher("HEDCNTEARXCHVMXZNRMTZIZDAPYRZEXUDPSHCWFEZOTFNDEFHLCUZIWBGBMKPAHAMZXQPTHSLURPNFDXMTQPZDTNQPRZAPUPNORNTNFTTZHMMZWAZFZQVWHOEQKWTNHILBCUIWZMGBXUPMFDKGIZCZNMEMNQHOEQKWTNPEXZQEQWDHDPIQPMRTFHNRAESXEPHYGFNROPCPEMDZUCZMHOEQKWTNQPZNXUPKRQTIPARTPCTPTFZNAPCWVMHLCUIWCRSOBEMZFTULNRCHNDHPTIZDAWXAFXBETZKDTHEFZIWBWB")
which_cipher("AVWETTYEHYWHXEANLWFQIOACPOACJCBOHBLDQGEHHGSUIFOFZDDPGPRTNVLPVWDTYSUIWKWSVRATLBNSPGUPAMLPPBTPDTRTHKZTZXHPOOVGMMICLRZTSBLWLRZXULEWMOURQWEYAODAGPHTSSUAMTNTUUZXAZUYAVWXUIOCAOFIXXOASSACPBSWPTWXVVLFKWFVPBSPEKAKMLAWSQSBMMOEOSUPAMLPMCJPZXAOPBYDNAIDSOKIEBLWHBVIMLTLTSFIBAEJDSJTIELEYOHEMWBJHBSKIEAYJVWPVWHLKHGH") #hospital
which_cipher("TVXLJDOJGBZGTJGZTVXLJDOJGBJXZNZBQXVNGJEJVGXFZIJGVKQZDEZGTVXLJDOJGBGJEJVGXFEKVKQZDQEVDJXZEWEKJHGJEJVGXFEKVKQZDVDMHZDQKZGQDBRVXQNQKWEQKUVKJMQDKFJDZGKFJVEKBGJJDNVDMDVKQZDVNIVGLQDDZGKFJVEKJGDBGJJDNVDMKFJEKVKQZDQEZADJMOWKFJBGJJDNVDMEJNRBZCJGDHJDKVDMAVEGUDOWKFJMVDQEFVGXKQXQDEKQKUKJMVDELIZNVGXJDKJGUDKQNXVV")
print()

which_cipher("BRLLKNZRDUKPIBKOYDNVKYPULRIIKIRNNVKBRPPKRJEEZKDBKRXNVRNPFDIRLEDONVKJRLLIEWNVKBRLLKNINFZYEZRDUKPIFIKNVKBRPPKNEIFGGEPNNVKXIKLSKIZFPYDOKQKPUYIKIBRPPKJEPAYIZKIYODKZNEJRPXFGNVKBEZMRDZINPKNUVXFIULKINEGPKGRPKWEPUKDNKPJEPAJVKPKNVKMKQKUFNKKQKPUYIKIJYNVEFNNVKBRPPKUKDNKPJEPAYDNVKXYZZLKEWNVKPEEXINRPNIEFNJYNVILE")
which_cipher("MJTXCHHJBYBETQAYUSNHQVIXFLIKOPOTWUUTOFIXFSPIPRWWUXIGRONIEXAKESDQUZIGRWNQARDHYONISIRFLBYQMXEKTBTMQFJBLGHJYSVXOHOYTIUGTHEIEXAMPGASPWTTCHEIXMVBYUISNSSMZBWMQVEAPAAWDMEWSWSXQGOGOKIKQHAGLEUFPVILSSDNQHIGEVEQMXECLGSNZGEMSSNMQLALCSTZDREWECWWUXIGROGFURAGODUGXMSAPRHNEJONCHHGASKBYQAFVELMSCULTMTALGBJQRSTTRTMMXIG") #meatloaf
which_cipher("BECMSUDQIQWNWKICXRDTONNMTDQTMSVQXOENGUEOYHOVRGWLWMDUMDEBUSTIXYTWYDDPYXPHOEKVZXXRDAXROENDOEFQOMYUWNXSEWMDEBDQNPWEQAWNIUYXRFQXNMQTBEPVXRMOTCQTMDXRFTODVTNMWYYFTAYSOYTQWRYDIQCXASXRYDHSWMVNTVQXNMQTBEDZHLURRXWNLFTUQXUIUSAPTACXASXROENDOEONYSEODZWKMGZWYLBEQTYGOEWKYHICWQQXCMGQXRNQGQXTPVSCRSWNKSIQVQTXWVQXZDWN")